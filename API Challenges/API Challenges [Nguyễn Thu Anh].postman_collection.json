{
	"info": {
		"_postman_id": "08d6e7f9-6f08-45a6-909a-1cfb4cf143d5",
		"name": "API Challenges [Nguyá»…n Thu Anh]",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24323652"
	},
	"item": [
		{
			"name": "01. POST /challenger (201)",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/challenger",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenger"
					]
				}
			},
			"response": []
		},
		{
			"name": "02. GET /challenges (200)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/challenges",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenges"
					]
				}
			},
			"response": []
		},
		{
			"name": "03. GET /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.environment.set(\"id\", jsonData.todos[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "04. GET /todo (404) not plural",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"4.1 Check GET/todos status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/todo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "05. GET /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"5.1 Check GET/todos/{id} status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"5.2 Check GET/todos/{id} returns a specific to do\", function () {\r",
							"    var response = JSON.parse(responseBody);\r",
							"    pm.expect(pm.environment.get('id')).to.eq(response.todos[0].id)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "06. GET /todos/{id} (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('6.1 GET /todos/{id} shows error message when search for a non-existence to do', function() {\r",
							"    pm.response.to.have.status(404)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos/999",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"999"
					]
				}
			},
			"response": []
		},
		{
			"name": "07. HEAD /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"7.1 Check HEAD/todos has satus code 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "08. POST /todos (201)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"schedule meeting\",\r\n    \"doneStatus\": true,\r\n    \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "09. GET /todos (200) ?filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('9.1 Check GET/todos response is 200', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('9.2 Check GET/todos returns done to dos', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect(true).to.eq(response.todos[0].doneStatus)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"schedule meeting\",\r\n    \"doneStatus\": true,\r\n    \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos?doneStatus=true",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "10. POST /todos (400) doneStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('10.1 Check POST/todos status code is 400', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test('10.2 Check POST /todos returns an error message', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect('Failed Validation: doneStatus should be BOOLEAN').to.eq(response.errorMessages[0])\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"schedule meeting\",\r\n    \"doneStatus\": 123,\r\n    \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "11. POST /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('11.1 Check POST/todos status code is 200', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('11.2 Check POST/todos successfully updates a to do', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect('oneiros').to.eq(response.title)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"title\": \"oneiros\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "12. DELETE /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('12.1 Check DELETE/todos{id} status code is 200', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "13. OPTIONS /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('13.1 Check OPTION/todos status code is 200', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}